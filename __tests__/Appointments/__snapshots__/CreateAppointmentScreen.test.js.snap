// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 15,
                "fontWeight": "bold",
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 15,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        Title
      </Text>
    </View>
    <View
      style={
        Object {
          "borderBottomColor": "#bdc6cf",
          "borderBottomWidth": 1,
          "marginLeft": 20,
          "marginRight": 20,
          "transform": Array [
            Object {
              "translateX": 0,
            },
          ],
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        style={
          Array [
            Object {
              "color": "#86939e",
              "minHeight": 36,
              "width": 750,
            },
            Object {
              "fontSize": 17.5,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      style={
        Array [
          Object {},
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {},
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "color": "#86939e",
                "fontSize": 15,
                "fontWeight": "bold",
                "marginBottom": 1,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 15,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        Description
      </Text>
    </View>
    <View
      style={
        Object {
          "borderBottomColor": "#bdc6cf",
          "borderBottomWidth": 1,
          "marginLeft": 20,
          "marginRight": 20,
          "transform": Array [
            Object {
              "translateX": 0,
            },
          ],
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        style={
          Array [
            Object {
              "color": "#86939e",
              "minHeight": 36,
              "width": 750,
            },
            Object {
              "fontSize": 17.5,
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      style={
        Object {
          "paddingTop": 10,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            undefined,
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={null}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#51afaa",
                },
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 20,
                    },
                    undefined,
                    Object {
                      "fontSize": 17.5,
                    },
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                  ],
                ]
              }
            >
              Select Date
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "paddingTop": 10,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#51afaa",
          }
        }
      >
         Selected Datetime: 
        
         
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "padding": 10,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "margin": 7,
          },
          Object {
            "borderRadius": 54,
            "height": 104,
            "width": 104,
          },
          false,
          Object {
            "alignItems": "center",
            "backgroundColor": "#51afaa",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 50,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ],
            Object {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        î—Š
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onRequestClose={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      pointerEvents="box-none"
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "white",
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        >
          <View>
            <RCTDatePicker
              date={1539946629672}
              minuteInterval={1}
              mode="datetime"
              onChange={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "height": 216,
                }
              }
            />
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "white",
            "borderRadius": 13,
            "height": 57,
            "justifyContent": "center",
            "marginBottom": 0,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;
